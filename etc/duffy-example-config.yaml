---
client:
  url: http://127.0.0.1:8080/api/v1
  auth:
    name: tenant
    key: a8b9899d-b128-59a1-aa86-754920b7f5ed

app:
  loglevel: warning
  host: 0.0.0.0
  port: 8080
  logging:
    version: 1
    disable_existing_loggers: false
    formatters:
      default:
        (): uvicorn.logging.DefaultFormatter
        fmt: '%(levelprefix)s %(message)s'
        use_colors: null
      access:
        (): uvicorn.logging.AccessFormatter
        fmt: '%(levelprefix)s %(client_addr)s - "%(request_line)s" %(status_code)s'
    handlers:
      default:
        class: logging.StreamHandler
        formatter: default
        stream: ext://sys.stderr
      access:
        class: logging.StreamHandler
        formatter: access
        stream: ext://sys.stdout
      syslog:
        class: logging.handlers.SysLogHandler
        address: /dev/log
    loggers:
      duffy:
        handlers:
        - default
        - syslog
      uvicorn:
        handlers:
        - default
        level: INFO
      uvicorn.error:
        level: INFO
      uvicorn.access:
        handlers:
        - access
        level: INFO
        propagate: false

metaclient:
  loglevel: warning
  host: 0.0.0.0
  port: 9090
  dest: http://127.0.0.1:8080
  usermap:
    "fca07101-daea-4b8c-acb4-88ba8ae7654c": "hahahahahatheystoppedlegacysupporthahahahaha"
  poolmap:
  # Valid selection keys: ver, arch, flavor
  # Values can be simple strings or regexes (surrounded by "^...$")
  # and must map to a pool which can use Jinja macros.
  # First match wins.
  - arch: "^(aarch64|ppc64|ppc64le)$"
    pool: "virtual-centos{{ ver | replace('-', '') }}-{{ arch }}-{{ flavor | default('medium') }}"
  - arch: "x86_64"
    pool: "physical-centos{{ ver | replace('-', '') }}-{{ arch }}"
  # Optional Jinja2 template to mangle hostnames. The `hostname` variable will be set in the
  # template when itâ€™s rendered, e.g.:
  # mangle_hostname: "{{ hostname | replace('.ci.centos.org', '') }}"
  logging:
    version: 1
    disable_existing_loggers: false
    formatters:
      default:
        (): uvicorn.logging.DefaultFormatter
        fmt: '%(levelprefix)s %(message)s'
        use_colors: null
      access:
        (): uvicorn.logging.AccessFormatter
        fmt: '%(levelprefix)s %(client_addr)s - "%(request_line)s" %(status_code)s'
    handlers:
      default:
        class: logging.StreamHandler
        formatter: default
        stream: ext://sys.stderr
      access:
        class: logging.StreamHandler
        formatter: access
        stream: ext://sys.stdout
      syslog:
        class: logging.handlers.SysLogHandler
        address: /dev/log
    loggers:
      duffy:
        handlers:
        - default
        - syslog
      uvicorn:
        handlers:
        - default
        level: INFO
      uvicorn.error:
        level: INFO
      uvicorn.access:
        handlers:
        - access
        level: INFO
        propagate: false

tasks:
  celery:
    broker_url: "redis://localhost:6379"
    result_backend: "redis://localhost:6379"
    worker_redirect_stdouts_level: "INFO"
  locking:
    url: "redis://localhost:6379"
  periodic:
    fill-pools:
      interval: 300
    expire-sessions:
      interval: 300

database:
  sqlalchemy:
    sync_url: "sqlite:///:memory:"
    # the DB dialect must be async-compatible
    async_url: "sqlite+aiosqlite:///:memory:"

defaults:
  session-lifetime: "6h"
  session-lifetime-max: "12h"
  node-quota: 10

nodepools:
  abstract:
    mech-ansible:
      mechanism:
        type: "ansible"
        ansible:
          topdir: "/path/to/playbooks"
          extra-vars:
            nodepool: "{{ name }}"
            template_name: "{{ name }}"
    physical:
      type: "physical"
      extends: "mech-ansible"
      reuse-nodes:
        # This specifies which unused nodes can be reused for a pool. Keys map
        # into the JSON data field of a node, values are matched for equality
        # and are evaluated as Jinja templates filled with any other field of
        # the pool in question but have to be of simple types like strings or
        # integers.
        architecture: "{{ architecture }}"
      # Whether or not the playbooks should be run for single nodes, many
      # playbook runs in parallel, or not (one playbook run for all nodes).
      run-parallel: true
      mechanism:
        ansible:
          provision:
            playbook: "playbooks/baremetal/provision.yml"
          # The `deprovision` section is optional, or can be nulled.
          deprovision: ~
    physical-x86_64:
      extends: physical
      fill-level: 5
      architecture: x86_64
    virtual:
      type: "virtual"
      extends: "mech-ansible"
      reuse-nodes: false
      run-parallel: false
      mechanism:
        ansible:
          provision:
            extra-vars:
              # duffy_in.nodes gets passed in as a list
              quantity: "{{ duffy_in.nodes | length }}"
              # remove "virtual-", add "duffy-" prefix
              template_name: >-
                {% set parts=name.split("-") %}duffy-{{ parts[1:] | join("-") }}
            playbook: "playbooks/opennebula/provision.yml"
          deprovision:
            playbook: "playbooks/opennebula/deprovision.yml"
    virtual-x86_64-small:
      extends: virtual
      fill-level: 20
    virtual-x86_64-medium:
      extends: virtual
      fill-level: 10
    virtual-x86_64-large:
      extends: virtual
      fill-level: 5
  concrete:
    physical-centos8stream-x86_64:
      extends: "physical-x86_64"
    physical-fedora34-x86_64:
      extends: "physical-x86_64"
    physical-fedora35-x86_64:
      extends: "physical-x86_64"
    virtual-centos8stream-x86_64-small:
      extends: "virtual-x86_64-small"
    virtual-centos8stream-x86_64-medium:
      extends: "virtual-x86_64-medium"
    virtual-centos8stream-x86_64-large:
      extends: "virtual-x86_64-large"
    virtual-fedora34-x86_64-small:
      extends: "virtual-x86_64-small"
    virtual-fedora35-x86_64-small:
      extends: "virtual-x86_64-small"
    virtual-fedora34-x86_64-medium:
      extends: "virtual-x86_64-medium"
    virtual-fedora35-x86_64-medium:
      extends: "virtual-x86_64-medium"
    virtual-fedora34-x86_64-large:
      extends: "virtual-x86_64-large"
    virtual-fedora35-x86_64-large:
      extends: "virtual-x86_64-large"

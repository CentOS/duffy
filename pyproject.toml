[tool.poetry]
name = "duffy"
version = "3.4.0rc1"
description = "CentOS CI provisioner"
authors = ["Nils Philippsen <nils@redhat.com>", "Vipul Siddharth <siddharthvipul1@gmail.com>", "Akashdeep Dhar <akashdeep@redhat.com>", "Ben Capper <bcapper@redhat.com>"]
license = "MIT"
maintainers = ["Nils Philippsen <nils@redhat.com>", "Vipul Siddharth <siddharthvipul1@gmail.com>", "Akashdeep Dhar <akashdeep@redhat.com>", "Ben Capper <bcapper@redhat.com>"]
readme = "README.md"
homepage = "https://github.com/CentOS/duffy"
repository = "https://github.com/CentOS/duffy"
documentation = "https://github.com/CentOS/duffy/wiki"
keywords = ["baremetal", "ci", "vm", "opennebula", "centos"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Ansible",
    "Framework :: AsyncIO",
    "Framework :: Celery",
    "Framework :: FastAPI",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: POSIX :: Linux",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Operating System",
]

[tool.poetry.dependencies]
python = "^3.8"
click = "^8.0.3"
PyYAML = "^6"
SQLAlchemy = {version = "^2.0.5", extras=["asyncio"], optional = true}
alembic = {version = "^1.7.5", optional = true}
bcrypt = {version = "^3.2 || ^4", optional = true}
fastapi = {version = "^0.70 || ^0.71 || ^0.72 || ^0.73 || ^0.74 || ^0.75 || ^0.76 || ^0.77 || ^0.78 || ^0.79 || ^0.80 || ^0.81 || ^0.82 || ^0.83 || ^0.84 || ^0.85 || ^0.86 || ^0.87 || ^0.88 || ^0.89 || ^0.90 || ^0.91 || ^0.92 || ^0.93 || ^0.94 || ^0.95 || ^0.96 || ^0.97 || ^0.98 || ^0.99 || ^0.100.0 || ^0.101.0 || ^0.102.0 || ^0.103.0", optional = true}
uvicorn = {version = "^0.15 || ^0.16 || ^0.17 || ^0.18 || ^0.19 || ^0.20 || ^0.21 || ^0.22 || ^0.23.0", optional = true}
Jinja2 = {version = "^3.0.3", optional = true}
ansible-runner = {version = "^2.1.1", optional = true}
asyncpg = {version = "^0.25 || ^0.26 || ^0.27 || ^0.28", optional = true}
celery = {version = "^5.2.1", extras = ["redis"], optional = true}
httpx = {version = "^0.18.2 || ^0.19 || ^0.20 || ^0.21 || ^0.22 || ^0.23 || ^0.24", optional = true}
ipython = {version = "^7.29 || ^8", optional = true}
jmespath = {version = ">=0.10,<1 || ^1", optional = true}
pottery = {version = "^3", optional = true}
psycopg2 = {version = "^2.9.2", optional = true}
aiodns = {version = "^3.0.0", optional = true}
pydantic = "^2.0.3"
aiosqlite = {version = "^0.17 || ^0.18 || ^0.19", optional = true}
pyxdg = "^0.27 || ^0.28"
typing-extensions = "^4.6.1"

[tool.poetry.dev-dependencies]
Jinja2 = "^3.0.3"
ansible = "^5.2 || ^6 || ^7.0.0 || ^8.0.0"
ansible-core = "^2.12.1"
ansible-runner = "^2.1.1"
black = "^21.9b0 || ^22 || ^23"
flake8 = "^3.9.2 || ^4 || ^5 || ^6.0.0"
httpx = "^0.18.2 || ^0.19 || ^0.20 || ^0.21 || ^0.22 || ^0.23 || ^0.24"
isort = "^5.9.3"
jmespath = "^0.10 || ^1"
poetry = "^1.2.0"
pottery = "^3"
pytest = ">=6.2.5"
pytest-asyncio = "^0.17 || ^0.18 || ^0.19 || ^0.20 || ^0.21"
pytest-black = "^0.3.12"
pytest-cov = "^3 || ^4"
pytest-isort = "^2 || ^3"
tox = "^3.24.4 || ^4.0.0"
psycopg = "^3.0.16"
pytest-postgresql = "^4.1.1 || ^5.0.0"

[tool.poetry.extras]
# the `serve` command
app = [
    "SQLAlchemy", "alembic", "bcrypt", "fastapi", "uvicorn",
    "aiodns", "ansible-runner", "Jinja2", "jmespath", "pottery", "celery",
]
# the `admin ...` commands
admin = ["SQLAlchemy", "bcrypt", "fastapi"]
# the `setup-db` and `migration` commands
database = ["SQLAlchemy", "alembic", "bcrypt"]
# the `dev-shell` command
dev-shell = ["ipython", "SQLAlchemy", "alembic", "bcrypt"]
# the `serve` and `dev-shell` commands, if you use SQLite
sqlite = ["aiosqlite"]
# the `serve`, `worker` and `dev-shell` commands, if you use PostgreSQL
postgresql = ["psycopg2", "asyncpg"]
# the `worker` command
tasks = ["aiodns", "ansible-runner", "Jinja2", "jmespath", "pottery", "celery"]
# the `serve-legacy` command
legacy = ["httpx", "Jinja2"]
# the `client ...` commands
client = ["httpx"]

[tool.pytest.ini_options]
addopts = "--black --cov-config .coveragerc --cov=duffy --cov-report term --cov-report xml --cov-report html --isort"
asyncio_mode = "auto"
log_format = "%(levelname)s: %(asctime)s %(short_request_id_optional)s(%(filename)s:%(lineno)s %(message)s)"

[tool.isort]
line_length = 100
profile = "black"

[tool.black]
line-length = 100

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
duffy = "duffy.cli:cli"
